{
  "openapi": "3.0.3",
  "info": {
    "title": "RailMan App",
    "description": "RailMan App is a food catering service app for Indian Railways. The app is designed for both users and Restaurant administrator with different set of features based on the roles.",
    "termsOfService": "http://swagger.io/terms/",
    "contact": {
      "email": "avijitn1@gmail.com"
    },
    "license": {
      "name": "Apache 2.0",
      "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
    },
    "version": "1.0.11"
  },
  "externalDocs": {
    "description": "Find out more about RailMap",
    "url": "http://swagger.io"
  },
  "servers": [
    {
      "url": "http://localhost:3000/"
    }
  ],
  "tags": [
    {
      "name": "RailMan",
      "description": "food catering service app for Indian Railways",
      "externalDocs": {
        "description": "Find out more",
        "url": "http://localhost:3000/"
      }
    },
    {
      "name": "user",
      "description": "Operations about user"
    }
  ],
  "paths": {
    "/user": {
      "get": {
        "tags": [
          "user"
        ],
        "summary": "Get all User",
        "description": "This can only be done by admin",
        "operationId": "GetAllUsers",
        "responses": {
          "default": {
            "description": "successful operation"
          }
        }
      }
    },
    "/user/{pk}/": {
      "get": {
        "tags": [
          "user"
        ],
        "summary": "Gets a user by id",
        "description": "Returns a User by ID",
        "operationId": "getuserbyid",
        "responses": {
          "default": {
            "description": "successful operation"
          }
        }
      },
      "put": {
        "tags": [
          "user"
        ],
        "summary": "Update user details",
        "description": "Update user details",
        "operationId": "UpdateUserByID",
        "responses": {
          "default": {
            "description": "successful operation"
          }
        }
      },
      "delete": {
        "tags": [
          "user"
        ],
        "summary": "Update user details",
        "description": "Update user details",
        "operationId": "DeleteUserById",
        "responses": {
          "default": {
            "description": "successful operation"
          }
        }
      }
    },
    "/login": {
      "get": {
        "tags": [
          "login"
        ],
        "summary": "Logs user into the system",
        "description": "",
        "operationId": "loginUser",
        "parameters": [
          {
            "name": "username",
            "in": "query",
            "description": "The user name for login",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "password",
            "in": "query",
            "description": "The password for login in clear text",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {
              "X-Rate-Limit": {
                "description": "calls per hour allowed by the user",
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              },
              "X-Expires-After": {
                "description": "date in UTC when token expires",
                "schema": {
                  "type": "string",
                  "format": "date-time"
                }
              }
            },
            "content": {
              "application/xml": {
                "schema": {
                  "type": "string"
                }
              },
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "204": {
            "description": "Invalid username/password supplied"
          }
        }
      }
    },
    "/registration": {
      "post": {
        "tags": [
          "registration"
        ],
        "summary": "Registers users",
        "description": "User are registered based on roles - customer or restaurant owners",
        "operationId": "registeruser",
        "parameters": [],
        "responses": {
          "200": {
            "description": "successful operation"
          },
          "204": {
            "description": "Invalid data provided"
          },
          "default": {
            "description": "successful operation"
          }
        }
      }
    },
    "/restaurants/city": {
      "post": {
        "tags": [
          "restaurants"
        ],
        "summary": "Get restaurants",
        "description": "Query database for restaurants beased on cities",
        "operationId": "QueryResturants",
        "parameters": [],
        "responses": {
          "default": {
            "description": "successful operation"
          }
        }
      }
    },
    "/menu": {
      "post": {
        "tags": [
          "menu"
        ],
        "summary": "Get restaurants",
        "description": "Query database for restaurants beased on cities",
        "operationId": "QueryMenu",
        "parameters": [],
        "responses": {
          "200": {
            "description": "successful operation"
          },
          "default": {
            "description": "successful operation"
          }
        }
      }
    },
    "/orders": {
      "get": {
        "tags": [
          "order"
        ],
        "summary": "Get Orders",
        "description": "Query database for Orders by user name and restaurant name",
        "operationId": "GetOrder",
        "parameters": [],
        "responses": {
          "200": {
            "description": "successful operation"
          },
          "default": {
            "description": "successful operation"
          }
        }
      },
      "post": {
        "tags": [
          "order"
        ],
        "summary": "Get restaurants",
        "description": "Query database for restaurants beased on cities",
        "operationId": "QueryOrder",
        "parameters": [],
        "responses": {
          "200": {
            "description": "successful operation"
          },
          "default": {
            "description": "successful operation"
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "User": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64",
            "example": 1
          },
          "name": {
            "type": "string",
            "example": "avijit"
          },
          "email": {
            "type": "string",
            "example": "avijit@gmail.com"
          },
          "phone": {
            "type": "integer",
            "example": 809767662
          },
          "password": {
            "type": "string",
            "example": "Foid@987"
          }
        }
      },
      "RestaurantOwner": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64",
            "example": 1
          },
          "name": {
            "type": "string",
            "example": "avijit"
          },
          "email": {
            "type": "string",
            "example": "avijit@gmail.com"
          },
          "phone": {
            "type": "integer",
            "example": 809767662
          },
          "password": {
            "type": "string",
            "example": "Foid@987"
          }
        }
      },
      "Restaurant": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64",
            "example": 1
          },
          "name": {
            "type": "string",
            "example": "avijit"
          },
          "city": {
            "type": "string",
            "example": "bangalore"
          }
        }
      },
      "Menu": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64",
            "example": 1
          },
          "name": {
            "type": "string",
            "example": "avijit"
          },
          "price": {
            "type": "integer",
            "example": 230
          }
        }
      },
      "Order": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64",
            "example": 1
          },
          "userId": {
            "type": "integer",
            "example": 1
          },
          "restaurantId": {
            "type": "integer",
            "example": 1
          },
          "amount": {
            "type": "integer",
            "example": 100
          }
        }
      }
    }
  }
}